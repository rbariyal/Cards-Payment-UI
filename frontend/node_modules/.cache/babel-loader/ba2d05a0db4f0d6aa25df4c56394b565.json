{"ast":null,"code":"import moment from\"moment\";export function stripeCardNumberValidation(cardNumber){cardNumber.replace(/[^\\d]/g,\"\");if(cardNumber){return cardNumber&&/^[1-6]{1}[0-9]{14,15}$/i.test(cardNumber.replace(/[^\\d]/g,\"\").trim())?\"\":\"Enter a valid Card\";}return\"Enter a valid Card\";}export var stripeCardExpirValidation=function stripeCardExpirValidation(value){if(value){if(/^(0[1-9]|1[0-2])\\/[0-9]{2}$/i.test(value.trim())){var today=new Date();var CurrentDate=moment(new Date(today.getFullYear()+\"-\"+(today.getMonth()+1)+\"-\"+new Date(today.getFullYear(),today.getMonth()+1,0).getDate()));var visaValue=value.split(\"/\");var visaDate=new Date(\"20\".concat(visaValue[1]),visaValue[0],0);return CurrentDate<moment(visaDate)?undefined:\"Please enter valid date\";}else{return\"Invalid date format\";}}};export var textWithSpacesOnly=function textWithSpacesOnly(value){if(value){if(/^[a-zA-Z ]*$/i.test(value)){return undefined;}else{return\"Only alphabets\";}}else{return undefined;}};","map":{"version":3,"names":["moment","stripeCardNumberValidation","cardNumber","replace","test","trim","stripeCardExpirValidation","value","today","Date","CurrentDate","getFullYear","getMonth","getDate","visaValue","split","visaDate","undefined","textWithSpacesOnly"],"sources":["C:/Users/arora/OneDrive/Desktop/React/frontend/src/validations.jsx"],"sourcesContent":["import moment from \"moment\";\r\n\r\n\r\nexport function stripeCardNumberValidation(cardNumber) {\r\n    cardNumber.replace(/[^\\d]/g, \"\")\r\n        if(cardNumber) {\r\n          return cardNumber &&\r\n            /^[1-6]{1}[0-9]{14,15}$/i.test(\r\n              cardNumber.replace(/[^\\d]/g, \"\").trim()\r\n            )\r\n            ? \"\"\r\n            : \"Enter a valid Card\";\r\n        }\r\n      \r\n    \r\n    return \"Enter a valid Card\";\r\n  }\r\n  \r\n\r\nexport const stripeCardExpirValidation = (value) => {\r\n  if (value) {\r\n    if (/^(0[1-9]|1[0-2])\\/[0-9]{2}$/i.test(value.trim())) {\r\n      let today = new Date();\r\n      let CurrentDate = moment(\r\n        new Date(\r\n          today.getFullYear() +\r\n            \"-\" +\r\n            (today.getMonth() + 1) +\r\n            \"-\" +\r\n            new Date(today.getFullYear(), today.getMonth() + 1, 0).getDate()\r\n        )\r\n      );\r\n      let visaValue = value.split(\"/\");\r\n      let visaDate = new Date(`20${visaValue[1]}`, visaValue[0], 0);\r\n      return CurrentDate < moment(visaDate)\r\n        ? undefined\r\n        : \"Please enter valid date\";\r\n    } else {\r\n      return \"Invalid date format\";\r\n    }\r\n  }\r\n};\r\n\r\nexport const textWithSpacesOnly = (value) => {\r\n  if (value) {\r\n    if (/^[a-zA-Z ]*$/i.test(value)) {\r\n      return undefined;\r\n    } else {\r\n      return \"Only alphabets\";\r\n    }\r\n  } else {\r\n    return undefined;\r\n  }\r\n};"],"mappings":"AAAA,MAAOA,OAAM,KAAM,QAAQ,CAG3B,MAAO,SAASC,2BAA0B,CAACC,UAAU,CAAE,CACnDA,UAAU,CAACC,OAAO,CAAC,QAAQ,CAAE,EAAE,CAAC,CAC5B,GAAGD,UAAU,CAAE,CACb,MAAOA,WAAU,EACf,yBAAyB,CAACE,IAAI,CAC5BF,UAAU,CAACC,OAAO,CAAC,QAAQ,CAAE,EAAE,CAAC,CAACE,IAAI,EAAE,CACxC,CACC,EAAE,CACF,oBAAoB,CAC1B,CAGJ,MAAO,oBAAoB,CAC7B,CAGF,MAAO,IAAMC,0BAAyB,CAAG,QAA5BA,0BAAyB,CAAIC,KAAK,CAAK,CAClD,GAAIA,KAAK,CAAE,CACT,GAAI,8BAA8B,CAACH,IAAI,CAACG,KAAK,CAACF,IAAI,EAAE,CAAC,CAAE,CACrD,GAAIG,MAAK,CAAG,GAAIC,KAAI,EAAE,CACtB,GAAIC,YAAW,CAAGV,MAAM,CACtB,GAAIS,KAAI,CACND,KAAK,CAACG,WAAW,EAAE,CACjB,GAAG,EACFH,KAAK,CAACI,QAAQ,EAAE,CAAG,CAAC,CAAC,CACtB,GAAG,CACH,GAAIH,KAAI,CAACD,KAAK,CAACG,WAAW,EAAE,CAAEH,KAAK,CAACI,QAAQ,EAAE,CAAG,CAAC,CAAE,CAAC,CAAC,CAACC,OAAO,EAAE,CACnE,CACF,CACD,GAAIC,UAAS,CAAGP,KAAK,CAACQ,KAAK,CAAC,GAAG,CAAC,CAChC,GAAIC,SAAQ,CAAG,GAAIP,KAAI,aAAMK,SAAS,CAAC,CAAC,CAAC,EAAIA,SAAS,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAC7D,MAAOJ,YAAW,CAAGV,MAAM,CAACgB,QAAQ,CAAC,CACjCC,SAAS,CACT,yBAAyB,CAC/B,CAAC,IAAM,CACL,MAAO,qBAAqB,CAC9B,CACF,CACF,CAAC,CAED,MAAO,IAAMC,mBAAkB,CAAG,QAArBA,mBAAkB,CAAIX,KAAK,CAAK,CAC3C,GAAIA,KAAK,CAAE,CACT,GAAI,eAAe,CAACH,IAAI,CAACG,KAAK,CAAC,CAAE,CAC/B,MAAOU,UAAS,CAClB,CAAC,IAAM,CACL,MAAO,gBAAgB,CACzB,CACF,CAAC,IAAM,CACL,MAAOA,UAAS,CAClB,CACF,CAAC"},"metadata":{},"sourceType":"module"}